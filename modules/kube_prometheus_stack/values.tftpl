# kube-prometheus-stack-prometheus-values.tftpl
alertmanager:
  alertmanagerSpec:
    storage:
      volumeClaimTemplate:
        spec:
          storageClassName: ${storage_class_name}
          accessModes:
            - ReadWriteOnce
          resources:
            requests:
              storage: 5Gi

prometheus:
  prometheusSpec:
    configMaps:
      - vault-agent-config
    initContainers:
      - name: vault-agent-auth
        image: hashicorp/vault:1.20
        securityContext:
          runAsUser: 100
        volumeMounts:
          - name: configmap-vault-agent-config
            mountPath: /etc/vault
          - name: config-out
            mountPath: /home/vault/config-out
        env:
          - name: VAULT_ADDR
            value: https://vault.netauto-ng-dev.org
          - name: SKIP_SETCAP
            value: "true"
        args:
          [
            "agent",
            "-config=/etc/vault/vault-agent-config.hcl",
            "-log-level=debug",
          ]
    storageSpec:
     volumeClaimTemplate:
       spec:
         storageClassName: ${storage_class_name}
         accessModes:
           - ReadWriteOnce
         resources:
           requests:
             storage: 10Gi
grafana:
  defaultDashboardsEnabled: false
  extraSecretMounts:
    - name: keycloak-oauth-secret-mount
      secretName: ${keycloak_secret_name}
      defaultMode: 0440
      mountPath: /etc/secrets/keycloak_oauth
      readOnly: true
  grafana.ini:
    auth:
      disable_login_form: true
      disable_signout_menu: true
      oauth_auto_login: true
    auth.generic_oauth:
      enabled: true
      name: Keycloak-OAuth
      allow_sign_up: true
      client_id: "$__file{/etc/secrets/keycloak_oauth/client_id}"
      client_secret: "$__file{/etc/secrets/keycloak_oauth/client_secret}"
      scopes: openid email profile offline_access roles
      auth_url: ${keycloak_url}/auth/realms/netauto-ng/protocol/openid-connect/auth
      token_url: ${keycloak_url}/auth/realms/netauto-ng/protocol/openid-connect/token
      api_url: ${keycloak_url}/auth/realms/netauto-ng/protocol/openid-connect/userinfo
      signout_redirect_url: ${keycloak_url}/auth/realms/netauto-ng/protocol/openid-connect/logout
      role_attribute_strict: true
      role_attribute_path: contains(roles[*], 'admin') && 'Admin' || contains(roles[*], 'editor') && 'Editor' || 'Viewer'
      allow_assign_grafana_admin: true
      email_attribute_path: email
      name_attribute_path: preferred_username
      login_attribute_path: preferred_username
    security:
      disable_initial_admin_creation: true
    server:
      root_url: ${grafana_url}
    sidecar:
      dashboards:
        enabled: true
        label: grafana_dashboard
        folder: /var/lib/grafana/dashboards
        updateIntervalSeconds: 10
        folderAnnotation: grafana_folder
        provider:
          allowUiUpdates: true
          foldersFromFilesStructure: true
      alerts:
        enabled: true
        label: grafana_alert
  persistence:
    enabled: true
    type: sts
    storageClassName: ${storage_class_name}
    accessModes:
      - ReadWriteOnce
    size: 10Gi
    finalizers:
      - kubernetes.io/pvc-protection
