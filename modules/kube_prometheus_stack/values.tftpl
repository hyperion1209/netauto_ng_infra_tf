# kube-prometheus-stack-prometheus-values.tftpl
# alertmanager:
#   alertmanagerSpec:
#     storage:
#       volumeClaimTemplate:
#         spec:
#           storageClassName: ${storage_class_name}
#           accessModes:
#             - ReadWriteOnce
#           resources:
#             requests:
#               storage: 5Gi
# prometheus:
#   prometheusSpec:
#     storageSpec:
#      volumeClaimTemplate:
#        spec:
#          storageClassName: ${storage_class_name}
#          accessModes:
#            - ReadWriteOnce
#          resources:
#            requests:
#              storage: 10Gi
grafana:
  defaultDashboardsEnabled: false
  extraSecretMounts:
    - name: keycloak-oauth-secret-mount
      secretName: ${keycloak_secret_name}
      defaultMode: 0440
      mountPath: /etc/secrets/keycloak_oauth
      readOnly: true
  grafana.ini:
    auth:
      disable_login_form: true
      disable_signout_menu: true
      oauth_auto_login: true
    auth.generic_oauth:
      enabled: true
      name: Keycloak-OAuth
      allow_sign_up: true
      client_id: grafana-oauth
      client_secret: "$__file{/etc/secrets/keycloak_oauth/client_secret}"
      scopes: openid email profile offline_access roles
      auth_url: ${keycloak_url}/auth/realms/netauto-ng/protocol/openid-connect/auth
      token_url: ${keycloak_url}/auth/realms/netauto-ng/protocol/openid-connect/token
      api_url: ${keycloak_url}/auth/realms/netauto-ng/protocol/openid-connect/userinfo
      signout_redirect_url: ${keycloak_url}/auth/realms/netauto-ng/protocol/openid-connect/logout
      role_attribute_strict: true
      role_attribute_path: contains(roles[*], 'admin') && 'Admin' || contains(roles[*], 'editor') && 'Editor' || 'Viewer'
      allow_assign_grafana_admin: true
      email_attribute_path: email
      name_attribute_path: preferred_username
      login_attribute_path: preferred_username
    security:
      disable_initial_admin_creation: true
    server:
      root_url: ${grafana_url}
